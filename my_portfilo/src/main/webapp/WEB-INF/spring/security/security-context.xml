<?xml version="1.0" encoding="UTF-8"?>

<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd 
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util.xsd">



	<!-- 정적 리소스 파일들에는 보안 설정을 하지 않음 -->

	<http pattern="/include/**" security="none" />



	<http auto-config="true" use-expressions="true"
		create-session="never">
		<!-- 관리자 영역 설정 -->

		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>

		<!-- 권한에 관계없이 접속 가능한 영역(guest도 접속 가능) -->

		<intercept-url pattern="/user/**" access="hasRole('ROLE_USER')"/>
		<intercept-url pattern="/board/*" access="permitAll"/>
		<intercept-url pattern="/board/merge/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />

		<!-- 로그인폼 -->
		<logout logout-url="/logout.do" 
				logout-success-url="/main"/>
		<form-login login-page="/login.do"
			login-processing-url="/user/login_check.do"
			authentication-success-handler-ref="successHandler"
			authentication-failure-handler-ref="failureHandler"
			username-parameter="userid" password-parameter="passwd"/>

		<session-management>
			<!-- max-sessions="1" 동시접속 막기 error-if-maximu m-exceeded="true" 로그인 세션초과시 에러 옵션 expired-url="/user/login" 세션 만료시 이동할 주소 -->
			<concurrency-control max-sessions="1" expired-url="/login.do" error-if-maximum-exceeded="true" />
		</session-management>

		<!-- 접근권한이 없는 경우의 코드 -->
		<access-denied-handler ref="deniedHandler" />

	</http>



	<beans:bean id="deniedHandler"
		class="com.mycompany.project.common.serviceImpl.DeniedHandler" />
	<beans:bean id="successHandler"
		class="com.mycompany.project.common.serviceImpl.SuccessHandler" />
	<beans:bean id="failureHandler"
		class="com.mycompany.project.common.serviceImpl.FailureHandler" />

	<!-- 로그인 인증을 처리하는 빈 -->
	<beans:bean id="userService"
		class="com.mycompany.project.common.serviceImpl.UserService">
		<beans:constructor-arg name="sqlSession"
			ref="sqlSessionTemplate" />
	</beans:bean>

	<!-- 비밀번호 암호화를 위한 빈 -->
	<beans:bean id="pwdEncoder"	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

</beans:beans>
 